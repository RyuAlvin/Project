package org.yeahicode.tamaru.spring;

import org.springframework.context.support.ClassPathXmlApplicationContext;
import org.yeahicode.tamaru.spring.bean.Animal;

import java.util.Random;

public class LifecycleTest {
    public static void main(String[] args) {
        ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext("app-context.xml");
        /**
         * <bean id="animal" class="org.yeahicode.bean.Animal" init-method="customInitMethod" destroy-method="customDestroyMethod">
         *     <property name="name" value="我是熊猫"/>
         * </bean>
         *
         * 1、构造函数：实例化...
         * 2、设置属性...
         * 3-1、Aware接口检查：BeanNameAware...setBeanName...
         * 3-2、Aware接口检查：BeanFactoryAware...setBeanFactory...
         * 3-3、Aware接口检查：ApplicationContextAware...setApplicationContext...
         * 4、BeanPostProcessor接口：前置处理器...
         * 5、InitializingBean接口：afterPropertiesSet...
         * 6、自定义：InitMethod...
         * 7、BeanPostProcessor接口：后置处理器...
         * 8、DisposableBean接口：destroy...
         * 9、自定义：DestroyMethod...
         */
        Animal animal = (Animal) context.getBean("animal");
        context.close();
    }
}
