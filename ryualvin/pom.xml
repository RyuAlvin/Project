<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.6.8</version>
        <relativePath/>
    </parent>

    <groupId>org.yeahicode</groupId>
    <artifactId>ryualvin</artifactId>
    <version>1.0-SNAPSHOT</version>
    <description>cloud-tenant:云承租聚合项目，简称ct</description>
    <modules>
        <module>ryualvin-admin</module>
        <module>ryualvin-application</module>
        <module>ryualvin-domain</module>
        <module>ryualvin-infrastructure</module>
        <module>ryualvin-utility</module>
        <module>ryualvin-web</module>
        <module>ryualvin-infrastructure/ryualvin-common-redis</module>
        <module>ryualvin-infrastructure/ryualvin-common-log</module>
        <module>ryualvin-infrastructure/ryualvin-common-mq</module>
    </modules>

    <packaging>pom</packaging>

    <properties>
        <java.version>17</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.plugin.version>3.1</maven.plugin.version>
        <maven.compile.source>17</maven.compile.source>
        <maven.compile.target>17</maven.compile.target>
        <spring.boot.starter.version>2.6.8</spring.boot.starter.version>
        <spring.boot.web.version>2.6.8</spring.boot.web.version>
        <spring.boot.autoconfigure.version>2.6.8</spring.boot.autoconfigure.version>
        <spring.boot.redis.version>2.6.8</spring.boot.redis.version>
        <spring.boot.jdbc.version>2.6.8</spring.boot.jdbc.version>
        <spring.aop.version>2.6.8</spring.aop.version>
        <spring.boot.druid.version>1.1.21</spring.boot.druid.version>
        <lombok.version>1.18.28</lombok.version>
        <swagger.ui.version>3.0.0</swagger.ui.version>
        <swagger.version>3.0.0</swagger.version>
        <spring.boot.log4j.version>2.4.2</spring.boot.log4j.version>
        <logback.version>1.2.11</logback.version>
        <commons.pool.version>2.9.0</commons.pool.version>
        <jackson.annotations.version>2.9.0</jackson.annotations.version>
        <jackson.databind.version>2.11.4</jackson.databind.version>
        <commons.lang.version>2.6</commons.lang.version>
        <mysql.connector.version>8.0.22</mysql.connector.version>
        <spring.boot.mybatis.version>3.5.3</spring.boot.mybatis.version>
        <disruptor.version>3.4.2</disruptor.version>
        <mapstruct.version>1.4.2.Final</mapstruct.version>
        <gson.version>2.8.6</gson.version>
        <freemarker.version>2.3.30</freemarker.version>
        <pinyin4j.version>2.5.0</pinyin4j.version>
        <guava.version>19.0</guava.version>
        <fastjson.version>1.2.83</fastjson.version>
        <spring.websocket.version>2.4.2</spring.websocket.version>
        <http.client.version>5.0.3</http.client.version>
        <spring.boot.test.version>2.4.2</spring.boot.test.version>
        <junit.version>4.13.1</junit.version>
        <commons.lang3.version>3.10</commons.lang3.version>
        <xxl.job.version>2.3.1</xxl.job.version>
        <hibernate.validator.version>6.0.18.Final</hibernate.validator.version>
        <zxing.core.version>3.5.1</zxing.core.version>
        <reflections.version>0.10.2</reflections.version>
        <commons.collections.version>3.2.2</commons.collections.version>
        <commons.io.version>1.3.2</commons.io.version>
        <jjwt.version>0.9.1</jjwt.version>
        <hutool.version>5.8.5</hutool.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>1.5.0.Final</version>
<!--            用于指定依赖在编译和测试阶段可用，但在运行时由容器或环境提供。
这通常在开发与应用服务器或某些框架（如Servlet API、JSP）等协作时使用。
scopre=provided用于那些在开发和测试中需要，但在生产环境中由外部容器或平台提供的依赖，避免了在打包时重复包含这些依赖。-->
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct-processor</artifactId>
            <version>1.5.0.Final</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <!-- springboot -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.starter.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- springboot-jdbc -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-jdbc</artifactId>
                <version>${spring.boot.jdbc.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-to-slf4j</artifactId>
                <version>2.15.0</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <!-- springboot-druid -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${spring.boot.druid.version}</version>
            </dependency>
            <!-- mysql -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.connector.version}</version>
            </dependency>
            <!-- springboot-mybatis -->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${spring.boot.mybatis.version}</version>
            </dependency>
            <!-- springboot-web -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring.boot.web.version}</version>
            </dependency>
            <!-- swagger -->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${swagger.ui.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-boot-starter</artifactId>
                <version>${swagger.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${swagger.version}</version>
            </dependency>
            <!-- spring-autoconfigure -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-autoconfigure</artifactId>
                <version>${spring.boot.autoconfigure.version}</version>
            </dependency>
            <!-- spring-data-redis -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-redis</artifactId>
                <version>${spring.boot.redis.version}</version>
            </dependency>
            <!-- commons-pool-jedis -->
            <!--<dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-pool2</artifactId>
                <version>${commons.pool.version}</version>
            </dependency>-->
            <!-- jackson -->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson.annotations.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.databind.version}</version>
            </dependency>
            <!-- commons-lang -->
            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>${commons.lang.version}</version>
            </dependency>
            <!-- commons-lang3 -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons.lang3.version}</version>
            </dependency>
            <!-- lombok -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>
            <!-- disruptor -->
            <dependency>
                <groupId>com.lmax</groupId>
                <artifactId>disruptor</artifactId>
                <version>${disruptor.version}</version>
            </dependency>
            <!-- mapstruct -->
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <!-- spring-boot-starter-aop -->
            <!--<dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-aop</artifactId>
                <version>${spring.aop.version}</version>
            </dependency>-->
            <!-- gson -->
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>
            <!-- freemarker -->
            <dependency>
                <groupId>org.freemarker</groupId>
                <artifactId>freemarker</artifactId>
                <version>${freemarker.version}</version>
            </dependency>
            <!-- pinyin4j -->
            <dependency>
                <groupId>com.belerweb</groupId>
                <artifactId>pinyin4j</artifactId>
                <version>${pinyin4j.version}</version>
            </dependency>
            <!-- guava -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <!-- fastjson -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>
            <!-- httpclient5 -->
            <dependency>
                <groupId>org.apache.httpcomponents.client5</groupId>
                <artifactId>httpclient5</artifactId>
                <version>${http.client.version}</version>
            </dependency>
            <!-- springBootTest -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${spring.boot.test.version}</version>
            </dependency>
            <!-- junit -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
            </dependency>
            <!--hibernate.validator-->
            <dependency>
                <groupId>org.hibernate.validator</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>${hibernate.validator.version}</version>
            </dependency>
            <!--zxing-->
            <dependency>
                <groupId>com.google.zxing</groupId>
                <artifactId>core</artifactId>
                <version>${zxing.core.version}</version>
            </dependency>
            <!--reflections-->
            <dependency>
                <groupId>org.reflections</groupId>
                <artifactId>reflections</artifactId>
                <version>${reflections.version}</version>
            </dependency>
            <!--commons-collections-->
            <dependency>
                <groupId>commons-collections</groupId>
                <artifactId>commons-collections</artifactId>
                <version>${commons.collections.version}</version>
            </dependency>
            <!--commons-io-->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons.io.version}</version>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt</artifactId>
                <version>${jjwt.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jsoup</groupId>
                <artifactId>jsoup</artifactId>
                <version>1.13.1</version>
            </dependency>
            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>2.11.0</version>
            </dependency>
            <dependency>
                <groupId>com.thoughtworks.xstream</groupId>
                <artifactId>xstream</artifactId>
                <version>1.4.20</version>
            </dependency>
            <!--付参数json依赖包-->
            <dependency>
                <groupId>net.sf.json-lib</groupId>
                <artifactId>json-lib</artifactId>
                <classifier>jdk15</classifier>
                <version>2.2.1</version>
            </dependency>
            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson</artifactId>
                <version>3.17.6</version>
            </dependency>
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcprov-jdk15on</artifactId>
                <version>1.66</version>
            </dependency>
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcpkix-jdk15on</artifactId>
                <version>1.66</version>
            </dependency>
            <dependency>
                <groupId>ma.glasnost.orika</groupId>
                <artifactId>orika-core</artifactId>
                <version>1.5.4</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.plugin.version}</version>
                <configuration>
                    <source>${maven.compile.source}</source>
                    <target>${maven.compile.target}</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
        </plugins>

        <!--打包一些配置文件-->
        <resources>
            <!--打包resources下的配置文件-->
            <resource>
                <directory>src/main/resources</directory>
            </resource>
            <!--打包mybatis的xml文件-->
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.xml</include>
                </includes>
            </resource>
        </resources>
    </build>

    <distributionManagement>
        <repository>
            <!-- 这里对应之前本地maven配置的server-id -->
            <id>maven-release</id>
            <!-- 这里代表私服仓库的地址,大家只需要把后面的名字换掉即可 -->
            <url>http://localhost:8081/repository/maven-releases/</url>
        </repository>
        <snapshotRepository>
            <id>maven-snapshot</id>
            <url>http://localhost:8081/repository/maven-snapshots/</url>
        </snapshotRepository>
    </distributionManagement>
</project>