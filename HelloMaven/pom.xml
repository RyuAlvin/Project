<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.yeahicode</groupId>
    <artifactId>HelloMaven</artifactId>
<!--    <version>2.0-SNAPSHOT</version>-->
    <version>release</version>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <dependency>
            <groupId>io.zipkin.reporter2</groupId>
            <artifactId>zipkin-reporter</artifactId>
            <version>2.7.10</version>
        </dependency>
    </dependencies>

<!--
以下属于个别配置，通过pom.xml方式指定仓库和插件仓库：
1、指定后，添加任意一个依赖，保存pom文件。然后执行package命令，就可以看到从指定的仓库下载获取jar包
2、因为nexus需要有用户名和密码才能访问，所以需要在本地的maven配置文件中配置账号密码：
    <server>
      <id>maven-nexus</id>
      <username>admin</username>
      <password>xxx</password>
    </server>
    注意：server.id必须和以下的配置中的id一致
3、idea的配置中关联本地maven
4、因为采取的是在pom文件中配置依赖远程仓库，所以就不要在本地maven配置文件中配置任何镜像
-->
<!--    <repositories>-->
<!--        <repository>-->
<!--            <id>maven-nexus</id>-->
<!--            <url>http://localhost:8081/repository/maven-public/</url>-->
<!--            <releases>-->
<!--                <enabled>true</enabled>-->
<!--            </releases>-->
<!--            <snapshots>-->
<!--                <enabled>false</enabled>-->
<!--            </snapshots>-->
<!--        </repository>-->
<!--    </repositories>-->

<!--    <pluginRepositories>-->
<!--        <pluginRepository>-->
<!--            <id>maven-nexus</id>-->
<!--            <url>http://localhost:8081/repository/maven-public/</url>-->
<!--        </pluginRepository>-->
<!--    </pluginRepositories>-->

<!--========================================================================-->

<!--
以下属于全局配置：
1、在maven本地配置中指定私服镜像
    <mirror>
        <id>maven-nexus</id>
        <mirrorOf>*</mirrorOf>
        <name>Nexus Maven</name>
        <url>http://localhost:8081/repository/maven-public/</url>
    </mirror>
2、在maven本地配置中指定私服账号密码
    <server>
      <id>maven-nexus</id>
      <username>admin</username>
      <password>sBen410109</password>
    </server>
    以下两个主要是争对从项目中deploy的时候，upload时访问不同发布用仓库时候的账号密码：
    <server>
        <id>maven-release</id>
        <username>admin</username>
        <password>sBen410109</password>
    </server>
    <server>
        <id>maven-snapshot</id>
        <username>admin</username>
        <password>sBen410109</password>
    </server>
3、在pom文件中配置对应的私服仓库地址
4、接着deploy，就可以到私服上看到已经上传的打包后的工程
5、部署包的版本通过<version></version>配置
    <version>release</version>则会upload到maven-releases仓库
    <version>1.0-SNAPSHOT</version>则会upload到maven-snapshots仓库
-->
    <distributionManagement>
        <repository>
            <!-- 这里对应之前本地maven配置的server-id -->
            <id>maven-release</id>
            <!-- 这里代表私服仓库的地址,大家只需要把后面的名字换掉即可 -->
            <url>http://localhost:8081/repository/maven-releases/</url>
        </repository>
        <snapshotRepository>
            <id>maven-snapshot</id>
            <url>http://localhost:8081/repository/maven-snapshots/</url>
        </snapshotRepository>
    </distributionManagement>
</project>